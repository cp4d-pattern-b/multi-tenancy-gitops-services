---
apiVersion: project.openshift.io/v1
kind: Project
metadata:
  name: db2
spec:
  finalizers:
  - kubernetes
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: analytics-db2
  namespace: db2
  labels:
    app: analytics-db2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics-db2
  serviceName: analytics-db2
  template:
    metadata:
      labels:
        app: analytics-db2
    spec:
      serviceAccountName: db2-service-account
      containers:
      - name: db2
        # Quote the image path to avoid issues with a colon in the path
        image: ibmcom/db2
        env:
        - name: LICENSE
          value: accept
        - name: DB2INST1_PASSWORD
          value: password
        - name: DBNAME
          value: BLUDB
        - name: DB2INSTANCE
          value: db2inst1
        ports:
        - containerPort: 50000
        volumeMounts:
        - name: db2-pvc
          mountPath: /database
        - mountPath: /var/custom/create_schema.sh
          subPath: create_schema.sh
          name: create-schema
        securityContext:
          privileged: true
      securityContext:
        fsGroup: 1000
      volumes:
      - name: db2-pvc
        persistentVolumeClaim:
          claimName:
            db2-pvc
      - name: create-schema
        configMap:
            name: create-schema
            defaultMode: 0777
            items:
            - key: create_schema.sh
              path: create_schema.sh
---
apiVersion: v1
kind: Service
metadata:
  name: analytics-db2
  namespace: db2
  labels:
    app: analytics-db2
spec:
  ports:
  - port: 50000
    protocol: TCP
    targetPort: 50000
  clusterIP: None
  selector:
    app: analytics-db2
  sessionAffinity: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db2-pvc
  namespace: db2
spec:
  storageClassName: managed-nfs-storage
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: db2-service-account
  namespace: db2
---
apiVersion: v1
kind: SecurityContextConstraints
metadata:
  name: db2-uid
priority: 10
readOnlyRootFilesystem: false
requiredDropCapabilities:
- MKNOD
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:db2:db2-service-account
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: true
allowedCapabilities: null
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups:
- system:cluster-admins
